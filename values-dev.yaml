# REANA components pointing to `latest`, locally built master branch

components:
    reana_db:
      image: docker.io/library/postgres:14.10
    reana_server:
      image: docker.io/reanahub/reana-server
      environment:
        REANA_SCHEDULER_REQUEUE_SLEEP: 2
        REANA_RATELIMIT_SLOW: "5 per second"
    reana_workflow_controller:
      image: docker.io/reanahub/reana-workflow-controller
      environment:
        REANA_RUNTIME_KUBERNETES_KEEP_ALIVE_JOBS_WITH_STATUSES: failed
    reana_workflow_engine_cwl:
      image: docker.io/reanahub/reana-workflow-engine-cwl
    reana_workflow_engine_yadage:
      image: docker.io/reanahub/reana-workflow-engine-yadage
    reana_workflow_engine_serial:
      image: docker.io/reanahub/reana-workflow-engine-serial
    reana_workflow_engine_snakemake:
      image: docker.io/reanahub/reana-workflow-engine-snakemake
    reana_job_controller:
      image: docker.io/reanahub/reana-job-controller
    reana_message_broker:
      image: docker.io/reanahub/reana-message-broker
    reana_ui:
      image: docker.io/reanahub/reana-ui
node_label_infrastructure: reana.io/system=infrastructure
node_label_infrastructuremq: reana.io/system=infrastructure
node_label_infrastructuredb: reana.io/system=infrastructure
node_label_runtimebatch: reana.io/system=jobs
node_label_runtimejobs: reana.io/system=jobs
node_label_runtimesessions: reana.io/system=infrastructure
traefik:
  ports:
    web:
      nodePort: 30080
    websecure:
      nodePort: 30443
      tls:
        # without additional configs will use default insecure one
        enabled: true
  enabled: true
  rbac:
    enabled: true
  service:
    type: NodePort
  ingressClass:
    enabled: true
    isDefaultClass: true
  nodeSelector: 
    reana.io/system: infrastructure
kubernetes_jobs_memory_limit: 100Mi
